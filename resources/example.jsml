${{
    const: {
        scopeVar1: "This is scope variable 1",
    },
    scopeVar2: "T<b>his is scope variable 2</b>"
}}
<h1>Hello world</h1>
using bt,<strike>bt_,bt__</strike> inside an inline function <br>
${bt`this is an example usage of inline function: "${() => "This string was returned by an inline function"}" using bt`}
<br>
Aliases bt_,bt__ have been removed. bt now returns an object with a custom toString.
    <p>
    Greetings from ${() => {  
        const timeOfDay = (new Date()).getHours() > 11 ? "evening" : "morning"; 
        return args.name[timeOfDay]; 
    }}
</p >
<h2>How are you? </h2>
<p>
    Test 2
    The time now is ${new Date().toString()}
</p>
<ul>${() => {
        const array = [1, 2, 3, 4, 5];
        return array.map(item => `<li>${item} </li>`).join('');
    }}</ul>
<p>
 "about" is a global value inserted by example-server: about: ${about}
</p>

<h2>Scope variables</h2>
<p>
    ${({ scopeVar1 }, invokSeqIndex) => scopeVar1 + "invokSeqIndex" + invokSeqIndex}
    <br>
    ${({ scopeVar2 }) => scopeVar2}
    <br>
    ${(_, invokSeqIndex) => "invokSeqIndex" + invokSeqIndex}
</p>

Trying to modify scope variables
${() => ({
        const: {
            cantUpdateScopeVar1: "If I try to update scopeVar1, the parser throws error. try changin this key to scopeVar1"
        },
        scopeVar2: "<b>Modified scope variable 2</b>"
    })}


<h2>Scope variables</h2>
<p>
    ${({ scopeVar1 }, invokSeqIndex) => scopeVar1 + "invokSeqIndex" + invokSeqIndex}
    <br>
    ${({ scopeVar2 }) => scopeVar2}
    <br>
    ${({cantUpdateScopeVar1}, invokSeqIndex) => cantUpdateScopeVar1+":invokSeqIndex" + invokSeqIndex}. 
    The reason is scopeVar1 is a constant. constants cannot be modified once they are set
</p>
${() => ({
   // scopeVar1: "Modify scopeVar1 as mutable", // uncommetn this line to verify const check is working
    scopeVar2: "<b>Modified scope variable 2 again</b>"
})}

<code disabled>This is a test for(`) escaping unbalanced backtick (`) character in (`)template body</code><br>
<code disabled>This is(`) a test for escaping(`) balanced backtick (`) character in template body(`)</code>

${ops.while()}
This is a test for capture groups. You should not see this content.
ops.while should define a method to process this text. currently it is not defined, which means, this text will not be rendered
${ops.end}